<idea-plugin url="https://github.com/JetBrains-Research/DeepBugsPlugin">
    <name>DeepBugsJavaScript</name>
    <id>DeepBugsJavaScript</id>
    <vendor url="https://research.jetbrains.org/ru/groups/ml_methods">
        Machine Learning Methods in Software Engineering Research Group
    </vendor>
    <description><![CDATA[
    DeepBugsJavaScript plugin provides several code inspections intended for detecting bugs and code quality issues.
    <h4>Requirements</h4>
    Currently available only for a 64-bit JVM.<br>
    Plugin requires model files to perform code analysis.
    It would be suggested to download required files when the plugin is
    launched for the first time.
    <h4>Using inspections</h4>
    <ol>
        <li>Select  <code>Analyze | Run inspection by name...</code>
            or <code>Code | Run inspection by name...</code>menu item.</li>
        <li>Select the desired code inspection.</li>
        <li>Set inspection options and click OK.</li>
    </ol>
    <h4>Available code inspections</h4>
    <ul>
        <li>DeepBugsJavaScript: Possibly incorrect binary operator.</li>
        <li>DeepBugsJavaScript: Possibly incorrect binary operand.</li>
        <li>DeepBugsJavaScript: Possibly swapped function arguments.</li>
    </ul>
    <h4>Configuration</h4>
    Each code inspection uses its own threshold value to distinguish correct from incorrect code. Thresholds are configurable
    and could be set manually in <code>Preferences/Settings | Tools | DeepBugsJavaScript</code>.
    ]]></description>

    <depends>com.intellij.modules.lang</depends>
    <depends>JavaScript</depends>
    <extensionPoints>
        <extensionPoint qualifiedName="dbp.statistics.projectStateCollector"
                        interface="org.jetbrains.research.groups.ml_methods.deepbugs.services.logger.collectors.state.ProjectStateCollector"/>
    </extensionPoints>

    <extensions defaultExtensionNs="dbp.statistics">
        <projectStateCollector
                implementation="org.jetbrains.research.groups.ml_methods.deepbugs.services.logger.collectors.state.InspectionStateCollector"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <applicationInitializedListener
                implementation="org.jetbrains.research.groups.ml_methods.deepbugs.services.logger.service.scheduler.DeepBugsLoggingScheduler"/>
        <statistic.eventLog.eventLoggerProvider
                implementation="org.jetbrains.research.groups.ml_methods.deepbugs.services.logger.DeepBugsEventLoggerProvider"/>
        <inspectionToolProvider
                implementation="org.jetbrains.research.groups.ml_methods.deepbugs.javascript.inspection_providers.JSDeepBugsProvider"/>
        <errorHandler
                implementation="org.jetbrains.research.groups.ml_methods.deepbugs.services.error_reporting.GitHubErrorReporter"/>
        <applicationService
                serviceImplementation="org.jetbrains.research.groups.ml_methods.deepbugs.javascript.settings.JSDeepBugsInspectionConfig"/>
        <applicationConfigurable groupId="tools"
                                 displayName="DeepBugsJavaScript"
                                 instance="org.jetbrains.research.groups.ml_methods.deepbugs.javascript.settings.JSDeepBugsInspectionConfigurable"/>

    </extensions>
</idea-plugin>
